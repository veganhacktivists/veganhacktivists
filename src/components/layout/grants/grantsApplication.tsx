import classNames from 'classnames';
import { toast } from 'react-toastify';
import { Controller, useForm } from 'react-hook-form';
import type React from 'react';
import { useCallback } from 'react';
import { useRouter } from 'next/router';
import axios from 'axios';
import { FormattedMessage, useIntl } from 'react-intl';

import { DarkButton } from '../../decoration/buttons';
import Checkbox from '../../forms/inputs/checkbox';
import TextArea from '../../forms/inputs/textArea';
import TextInput from '../../forms/inputs/textInput';
import Spinner from '../../decoration/spinner';
import Label from '../../forms/inputs/label';
import SelectInput from '../../forms/inputs/selectInput';
import { firstLetterUppercase } from '../../../lib/helpers/strings';
import SquareField from '../../decoration/squares';

import type { GrantsForm } from '../../../pages/api/grant-request';

interface FormSectionProps extends React.PropsWithChildren {
  sectionName: string;
  dark?: boolean;
}

const FormSection: React.FC<FormSectionProps> = ({
  children,
  sectionName,
  dark = false,
}) => {
  return (
    <div
      className={classNames({
        // 'bg-grey-light': dark,
        'bg-grey text-grey-lighter': dark,
      })}
    >
      <div className="max-w-screen-lg p-10 pt-5 mx-auto">
        <div>
          <h4 className="pt-10 pb-10 font-mono text-5xl font-bold capitalize">
            {sectionName}
          </h4>
        </div>
        <div className="space-y-2 text-left">{children}</div>
      </div>
    </div>
  );
};

const REQUIRED_FIELD = 'This field is required';

const GrantsApplication: React.FC = () => {
  const intl = useIntl();
  const {
    handleSubmit,
    control,
    register,
    watch,
    reset,
    setValue,
    formState: { errors, isSubmitting, isSubmitSuccessful },
  } = useForm<GrantsForm>({});

  const { reload } = useRouter();

  const onSubmit = useCallback<(data: GrantsForm) => Promise<void>>(
    async (data) => {
      const submit = async () => axios.post('/api/grant-request', data);

      await toast
        .promise(submit, {
          success: {
            render: intl.formatMessage({
              id: 'page.grants.section.application.form.message.success',
              defaultMessage: 'Your request was sent successfully!',
            }),
          },
          error: intl.formatMessage({
            id: 'page.grants.section.application.form.message.error',
            defaultMessage:
              'Something went wrong processing your submission! Please try again later',
          }),
          pending: intl.formatMessage({
            id: 'page.grants.section.application.form.message.pending',
            defaultMessage: 'Submitting...',
          }),
        })
        .then(() => {
          reset();
          setTimeout(() => {
            reload();
          }, 5000);
        });
    },
    [reload, reset, intl],
  );
  return (
    <div className="pt-10 pb-1 bg-gray-background">
      <form
        onSubmit={handleSubmit(onSubmit)}
        className="mx-auto mb-24 text-center"
      >
        <h3 className="mt-5 mb-10 font-mono text-4xl font-semibold">
          <FormattedMessage
            id="page.grants.section.application.heading"
            defaultMessage="Application Form"
          />
        </h3>
        <div className="max-w-screen-lg p-10 pt-5 mx-auto">
          <FormattedMessage
            id="page.grants.section.application.intro"
            defaultMessage="We'd like to understand more about you and your work to see if this partnership is a good fit. Given that we have observed a recent trend of application submissions being primarily generated by AI, we will be declining any submissions that we believe to not be authored by you or your team. <b>Our goal is to understand your unique vision, mission, and plans,not to review</b> We encourage you to leverage such tools to support, not replace, the content of your grant application."
            values={{
              b: (chunks) => <b>{chunks}</b>,
            }}
          />
        </div>
        <FormSection
          sectionName={intl.formatMessage({
            id: 'page.grants.section.application.form.a.heading',
            defaultMessage: 'Section A - About you',
          })}
        >
          <TextInput
            error={errors.name?.message}
            {...register('name', { required: REQUIRED_FIELD })}
          >
            <FormattedMessage
              id="page.grants.section.application.form.a.input.applicant-name.label"
              defaultMessage="What's your name?"
            />
          </TextInput>
          <Checkbox
            {...register('over18')}
            onChange={(checked) => setValue('over18', checked)}
          >
            <FormattedMessage
              id="page.grants.section.application.form.a.input.applicant-age.label"
              defaultMessage="Are you over 18?"
            />
          </Checkbox>
          {!watch('over18') && (
            <div>
              <i>
                <FormattedMessage
                  id="page.grants.section.application.form.a.input.applicant-age.text"
                  defaultMessage="If you're under 18 the form must be filled by your parent or legal guardian"
                />
              </i>
            </div>
          )}

          <div>
            <Label htmlFor="gender">
              <FormattedMessage
                id="page.grants.section.application.form.a.input.applicant-gender.label"
                defaultMessage="Gender <span>(optional)</span>"
                values={{
                  span: (chunks) => <span className="text-sm">{chunks}</span>,
                }}
              />
            </Label>
            <Controller
              name="gender"
              control={control}
              render={({ field: { value, onChange, ...field } }) => (
                <SelectInput
                  creatable
                  {...field}
                  current={
                    value ? { label: firstLetterUppercase(value), value } : null
                  }
                  onChange={(option) => {
                    onChange(option ? option.value : null);
                  }}
                  ref={null}
                  placeholder={intl.formatMessage({
                    id: 'page.grants.section.application.form.a.input.applicant-gender.placeholder',
                    defaultMessage: 'Select or type something...',
                  })}
                  error={errors.gender?.message}
                  options={[
                    intl.formatMessage({
                      id: 'page.grants.section.application.form.a.input.applicant-gender.option.0',
                      defaultMessage: 'male',
                    }),
                    intl.formatMessage({
                      id: 'page.grants.section.application.form.a.input.applicant-gender.option.1',
                      defaultMessage: 'female',
                    }),
                    intl.formatMessage({
                      id: 'page.grants.section.application.form.a.input.applicant-gender.option.2',
                      defaultMessage: 'other',
                    }),
                  ].map((option) => ({
                    value: option,
                    label: firstLetterUppercase(option),
                  }))}
                />
              )}
            />
            {errors.gender && (
              <p className="text-red">âš  {errors.gender.message}</p>
            )}
          </div>
          <TextArea
            error={errors.info?.message}
            {...register('info', { required: REQUIRED_FIELD })}
          >
            <FormattedMessage
              id="page.grants.section.application.form.a.input.applicant-info.label"
              defaultMessage="Give us a sense of who you are"
            />
            <div className="font-normal">
              <FormattedMessage
                id="page.grants.section.application.form.a.input.applicant-info.text"
                defaultMessage="Your project is important to us and we'll get to that, but the person you are is an equally important part of our process and we'd like to get to know you. Share with us what values guide you through your life and how those values influence the way you choose to grow as a person or share whatever you'd like us to know about you!"
              />
            </div>
          </TextArea>

          <TextInput
            {...register('email', {
              required: REQUIRED_FIELD,
              pattern: {
                value:
                  /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/i,
                message: intl.formatMessage({
                  id: 'page.grants.section.application.form.a.input.applicant-email.error',
                  defaultMessage: 'Please enter a valid email',
                }),
              },
            })}
            error={errors.email?.message}
          >
            <FormattedMessage
              id="page.grants.section.application.form.a.input.applicant-email.label"
              defaultMessage="What's your email?"
            />
          </TextInput>
        </FormSection>
        <SquareField
          squares={[
            { size: 16, color: 'grey', bottom: 0, left: 0 },
            { size: 16, color: 'grey-light', top: 0, left: 0 },
            { size: 32, color: 'grey-light', bottom: 0, right: 16 },
            { size: 16, color: 'grey-light', top: 0, right: 0 },
            { size: 16, color: 'grey', bottom: 0, right: 0 },
          ]}
          className="hidden md:block"
        />
        <FormSection
          sectionName={intl.formatMessage({
            id: 'page.grants.section.application.form.b.heading',
            defaultMessage: 'Section B - Your project',
          })}
          dark
        >
          <TextInput
            error={errors.projectName?.message}
            {...register('projectName', { required: REQUIRED_FIELD })}
          >
            <FormattedMessage
              id="page.grants.section.application.form.b.input.project-name.label"
              defaultMessage="What do you call your project?"
            />
            <div className="font-normal">
              <FormattedMessage
                id="page.grants.section.application.form.b.input.project-name.text"
                defaultMessage="The name of the project will help us understand the focus of it. Please keep it brief and simple"
              />
            </div>
          </TextInput>
          <TextArea
            {...register('projectInfo', { required: REQUIRED_FIELD })}
            error={errors.projectInfo?.message}
          >
            <FormattedMessage
              id="page.grants.section.application.form.b.input.project-info.label"
              defaultMessage="Tell us about the project you're seeking funding for"
            />
            <div className="font-normal">
              <FormattedMessage
                id="page.grants.section.application.form.b.input.project-info.text"
                defaultMessage="Please include the overall goal you wish to achieve for your project"
              />
            </div>
          </TextArea>
          <TextInput
            error={errors.projectLocation?.message}
            {...register('projectLocation', { required: REQUIRED_FIELD })}
          >
            <FormattedMessage
              id="page.grants.section.application.form.b.input.project-location.label"
              defaultMessage="Where does your project take place?"
            />
          </TextInput>

          <TextArea
            {...register('projectSteps', { required: REQUIRED_FIELD })}
            error={errors.projectSteps?.message}
          >
            <FormattedMessage
              id="page.grants.section.application.form.b.input.project-steps.label"
              defaultMessage="What steps will you take to carry out this project?"
            />
            <div className="font-normal">
              <FormattedMessage
                id="page.grants.section.application.form.b.input.project-steps.text"
                defaultMessage="Please include specific project objectives and activities"
              />
            </div>
          </TextArea>

          <TextArea
            {...register('targetAudience', { required: REQUIRED_FIELD })}
            error={errors.targetAudience?.message}
          >
            <FormattedMessage
              id="page.grants.section.application.form.b.input.target-audience.label"
              defaultMessage="Who is your target audience with this project?"
            />
            <div className="font-normal">
              <FormattedMessage
                id="page.grants.section.application.form.b.input.target-audience.text"
                defaultMessage="Do you target institutions, individuals, or something else? How will targeting this group create change for farmed animals?"
              />
            </div>
          </TextArea>

          <TextArea
            {...register('howSuccessful', { required: REQUIRED_FIELD })}
            error={errors.howSuccessful?.message}
          >
            <FormattedMessage
              id="page.grants.section.application.form.b.input.project-success.label"
              defaultMessage="How will you know if your project is successful?"
            />
            <div className="font-normal">
              <FormattedMessage
                id="page.grants.section.application.form.b.input.project-success.text"
                defaultMessage="Please share with us how you will evaluate your impact"
              />
            </div>
          </TextArea>

          <TextArea
            {...register('otherOrgs', { required: REQUIRED_FIELD })}
            error={errors.otherOrgs?.message}
          >
            <FormattedMessage
              id="page.grants.section.application.form.b.input.other-organizations.label"
              defaultMessage="Will other organizations be involved on this project?"
            />
            <div className="font-normal">
              <FormattedMessage
                id="page.grants.section.application.form.b.input.other-organizations.text"
                defaultMessage="Please share with us any other organizations who will work on the proposed project in partnership with you. Please include any relationships your organization has with local, national and where appropriate, international partners"
              />
            </div>
          </TextArea>
        </FormSection>
        <SquareField
          squares={[
            { size: 16, color: 'grey-light', bottom: 0, left: 0 },
            { size: 16, color: 'grey', bottom: 0, left: 16 },
            { size: 16, color: 'grey', top: 0, left: 0 },
            { size: 16, color: 'grey-light', bottom: 0, right: 16 },
            { size: 16, color: 'grey-background', bottom: 0, right: 0 },
          ]}
          className="hidden md:block"
        />
        <FormSection
          sectionName={intl.formatMessage({
            id: 'page.grants.section.application.form.c.heading',
            defaultMessage: 'Section C - Budget',
          })}
        >
          <FormattedMessage
            id="page.grants.section.application.form.c.intro"
            defaultMessage="<div>Your project's budget is a very important part of your application. Our team often uses this information to support their final decisions. Keep in mind that the budget items you list are ones that will serve to complete your proposed project, so be very specific in how the requested funding will be used.</div> <div>Please note, all information in this section should be given in <b>US Dollars</b> (US$).</div>"
            values={{
              div: (chunks) => <div>{chunks}</div>,
              b: (chunks) => <b>{chunks}</b>,
            }}
          />
          <TextInput
            type="number"
            error={errors.totalBudget?.message}
            {...register('totalBudget', {
              required: REQUIRED_FIELD,
              min: {
                value: 0,
                message: intl.formatMessage({
                  id: 'page.grants.section.application.form.c.input.total-budget.error',
                  defaultMessage: 'Please enter a positive value',
                }),
              },
            })}
          >
            <FormattedMessage
              id="page.grants.section.application.form.c.input.total-budget.label"
              defaultMessage="How much is the total budget for the project?"
            />
            <div className="font-normal">
              <FormattedMessage
                id="page.grants.section.application.form.c.input.total-budget.text"
                defaultMessage="Please tell us the total cost of the project. This amount should include the expenditure for all activities associated with the project"
              />
            </div>
          </TextInput>

          <TextInput
            type="number"
            error={errors.appliedBudget?.message}
            {...register('appliedBudget', {
              required: REQUIRED_FIELD,
              min: {
                value: 0,
                message: intl.formatMessage({
                  id: 'page.grants.section.application.form.c.input.applied-budget.error.min',
                  defaultMessage: 'Please enter a positive value',
                }),
              },
              max: {
                value: 1000,
                message: intl.formatMessage({
                  id: 'page.grants.section.application.form.c.input.applied-budget.error.max',
                  defaultMessage:
                    'We can only accept applications for up to $1000 USD',
                }),
              },
            })}
          >
            <FormattedMessage
              id="page.grants.section.application.form.c.input.applied-budget.label"
              defaultMessage="How much are you applying for?"
            />
            <div className="font-normal">
              <FormattedMessage
                id="page.grants.section.application.form.c.input.applied-budget.text"
                defaultMessage="We can only accept applications for up to $1000 USD"
              />
            </div>
          </TextInput>

          <TextArea
            {...register('fundsUsage', { required: REQUIRED_FIELD })}
            error={errors.fundsUsage?.message}
          >
            <FormattedMessage
              id="page.grants.section.application.form.c.input.funds-usage.label"
              defaultMessage="What will the funds be used for?"
            />
            <div className="font-normal">
              <FormattedMessage
                id="page.grants.section.application.form.c.input.funds-usage.text"
                defaultMessage="Please list each budget item and the associated cost. The total should equal the total funding you are requesting from <no-localization>TPP</no-localization>. Example: <ul> <li>1 1lb bag of corn - $5</li> <li>3 Garden Shovels - $35</li> </ul>"
                values={{
                  ul: (chunks) => (
                    <ul className="list-disc list-inside">{chunks}</ul>
                  ),
                  li: (chunks) => <li>{chunks}</li>,
                }}
              />
            </div>
          </TextArea>

          <Checkbox
            error={errors.canAcceptFunding?.message}
            {...register('canAcceptFunding', {
              required: REQUIRED_FIELD,
            })}
            onChange={(checked) => setValue('canAcceptFunding', checked)}
            description={
              <FormattedMessage
                id="page.grants.section.application.form.c.input.can-accept-funding.text"
                defaultMessage="I confirm that I have a bank or <no-localization>PayPal</no-localization> account that is in my name or my organization's name and that can receive grant payments in US Dollars. I confirm my understanding that - with the exception of my fiscal sponsor, if applicable - <no-localization>TPP</no-localization> is unable to make grant payments to any other person or entity on my behalf. I understand that if <no-localization>TPP</no-localization> reviews my proposal and decides to make an offer of funding, that offer is conditional on the ability to accept funds to an account in my name or in my organization's name."
              />
            }
          >
            <FormattedMessage
              id="page.grants.section.application.form.c.input.can-accept-funding.label"
              defaultMessage="Please confirm your ability to accept funding"
            />
          </Checkbox>
        </FormSection>
        <DarkButton
          type="submit"
          disabled={isSubmitting || isSubmitSuccessful}
          className="w-64 mx-auto mt-10 font-mono uppercase"
        >
          {isSubmitting ? <Spinner /> : 'Submit'}
        </DarkButton>
      </form>
    </div>
  );
};

export default GrantsApplication;
